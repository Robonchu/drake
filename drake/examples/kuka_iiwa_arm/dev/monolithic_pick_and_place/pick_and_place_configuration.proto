syntax = "proto3";

package drake.examples.kuka_iiwa_arm.monolithic_pick_and_place.proto;

// Next ID: 3
message Pose {
    // Position
    repeated double xyz = 1;
    // Orientation in SpaceXYZ Euler angles
    repeated double rpy = 2;
}

// Next ID: 2
message OptitrackInfo {
    int32 id = 1;
}

// Next ID: 4
message Model {
    // The name of the model. This should correspond to a key in path_map
    // and/or planning_geometry_map.
    string name = 1;
    // The Optitrack information for the model.
    OptitrackInfo optitrack_info = 2;
    // The [initial] world-pose of the model base.
    Pose pose = 3;
}

// Next ID: 3
message Geometry {
    oneof geometry {
        Box box = 1;
        Cylinder cylinder = 2;
    }

    message Box {
        // Dimensions of the box
        repeated double size = 1;
    }

    message Cylinder {
        // Dimensions of the cylinder
        double length = 1;
        double radius = 2;
    }
}

// Next ID: 4
message RobotBase {
    double base_x = 1;
    double base_y = 2;
    OptitrackInfo optitrack_info = 3;
}

// Next ID: 6
message PickAndPlaceConfiguration {
    map<string, string> model_path = 1;
    map<string, Geometry> planning_geometry = 2;

    // The tables from/on which the target can be picked/placed.
    repeated Model table = 3;
    repeated Model object = 4;
    repeated RobotBase robot_base = 5;
}
